?start:  expr | bool_expr
?expr: agex | sum
?agex: aggr "(" sum ")"
?aggr:  /(sum|min|max|avg)/i               -> aggregate
?sum: product
    | sum "+" product                      -> add
    | sum "-" product                      -> sub
?product: atom
       | product "*" atom                  -> mul
       | product "/" atom                  -> div
?atom: agex
       | const
       | column
       | case
       | "(" sum ")"
?column:  NAME
?const: NUMBER                             -> number
        | ESCAPED_STRING                   -> literal
        | /true/i                          -> true
        | /false/i                         -> false
        | /null/i                          -> null

?case: "if" "(" (bool_expr "," expr)+ ("," expr)? ")"

// boolean expressions
?bool_expr: bool_term ["OR" bool_term]
?bool_term: bool_factor ["AND" bool_factor]
?bool_factor: column
              | "NOT" bool_factor          -> not_bool_factor
              | "(" bool_expr ")"
              | relation_expr
              | vector_relation_expr
?relation_expr:        atom comparator atom
?vector_relation_expr: atom vector_comparator array
?array:                "(" [const ("," const)*] ")"
?comparator: EQ | NE | LT | LTE | GT | GTE
?vector_comparator: IN | NOTIN
EQ: "="
NE: "!="
LT: "<"
LTE: "<="
GT: ">"
GTE: ">="
IN: /IN/i
NOTIN: /NOT/i /IN/i
COMMENT: /#.*/

%import common.CNAME                       -> NAME
%import common.SIGNED_NUMBER               -> NUMBER
%import common.ESCAPED_STRING
%import common.WS_INLINE
%ignore COMMENT
%ignore WS_INLINE
